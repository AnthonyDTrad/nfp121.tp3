#BlueJ class context
comment0.target=Pile
comment0.text=\r\n\ Classe\ Pile\ \:\r\n\ modifier\ de\ facon\ quelle\ prend\ des\ object\r\n\ et\ non\ pas\ des\ int\ \r\n\ @Anthony\ Trad\r\n\ @1.0\r\n
comment1.params=taille
comment1.target=Pile(int)
comment1.text=\r\n\ Constructors\ \:\r\n\ Initialzier\ la\ pile\ avec\ une\ taille\ indiques\r\n\ params\ \:\ la\ taille\ de\ la\ pille\r\n
comment2.params=
comment2.target=Pile()
comment2.text=\r\n\ Constructors\ \:\r\n\ Initialzier\ la\ pile\ avec\ une\ taille\ predefinis\ (par\ defaut)\r\n\r\n
comment3.params=i
comment3.target=void\ empiler(java.lang.Object)
comment3.text=\r\n\ emplier\ un\ object\ dans\ la\ pile\ \r\n\ params\ \:\ l'object\ a\ empiler\r\n\ exeptions\ \:\ si\ la\ pile\ est\ pleine,\ on\ ne\ peut\ pas\ empiler\r\n
comment4.params=
comment4.target=java.lang.Object\ depiler()
comment4.text=\r\n\ depiler\ un\ object\ dans\ la\ pile\ \r\n\ params\ \:\ l'object\ a\ depiler\r\n\ exeptions\ \:\ si\ la\ pile\ est\ vide,\ on\ ne\ peut\ pas\ depiler\r\n\ returns\ \:\ retourne\ lobject\ qui\ a\ etait\ depiler\ \r\n
comment5.params=
comment5.target=boolean\ estVide()
comment5.text=\r\n\ voir\ si\ la\ pile\ est\ vide\ ou\ pas\r\n\ returns\ \:\ retourne\ letat\ expilquer\r\n
comment6.params=
comment6.target=boolean\ estPleine()
comment6.text=\r\n\ voir\ si\ la\ pile\ est\ pleine\ ou\ pas\r\n\ returns\ \:\ retourne\ letat\ expilquer\r\n
comment7.params=
comment7.target=java.lang.String\ toString()
numComments=8
